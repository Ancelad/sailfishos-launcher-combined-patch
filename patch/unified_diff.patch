commit 4cc5e14d02b15111ffd434c6797c514b7a0340b5
Author: CODeRUS <coderusinbox@gmail.com>
Date:   Wed Mar 4 02:16:35 2015 +0500

    Launcher combined patch

diff --git a/usr/share/lipstick-jolla-home-qt5/launcher/LauncherFolder.qml b/usr/share/lipstick-jolla-home-qt5/launcher/LauncherFolder.qml
index b888365..d785618 100644
--- a/usr/share/lipstick-jolla-home-qt5/launcher/LauncherFolder.qml
+++ b/usr/share/lipstick-jolla-home-qt5/launcher/LauncherFolder.qml
@@ -10,13 +10,23 @@ import org.nemomobile.lipstick 0.1
 import Sailfish.Silica 1.0
 import Sailfish.Silica.private 1.0
 import Sailfish.Lipstick 1.0
+import org.nemomobile.dbus 1.0
 
-Rectangle {
+Page {
     id: launcherFolder
+    _clickablePageIndicators: false
     property alias model: launcherGrid.model
     property bool selectIcon
     property Item iconSelector
-    property int visibleRowCount: 4
+    property int initialCellWidth: (Screen.width - Theme.paddingLarge * 2) / 4
+    property int cellWidth: Math.round(initialCellWidth + (initialCellWidth - Theme.iconSizeLauncher) / 3)
+    property int cellHeight: Screen.height / 6
+
+    property var switcher
+    property var dashboard
+    property var desktop
+    property var launcher
+    property Item remorse
 
     Connections {
         target: switcher
@@ -24,19 +34,61 @@ Rectangle {
     }
 
     function close() {
+    	console.log("close requested")
         launcherGrid.setEditMode(false)
-        opacity = 0.0
-        enabled = false
-        destroy(450)
+        pageStack.navigateBack()
+    }
+
+ 
+    function iconFolderItems(folder) {
+        var icons = []
+        for (var i = 0; i < folder.itemCount && i < 4; i++) {
+            icons.splice(icons.length, 0, folder.get(i).iconId)
+        }
+        return icons
+    }
+
+    function removeApplication(desktopFile, title) {
+        if (!remorse) {
+            remorse = remorseComponent.createObject(launcherFolder)
+        } else if (remorse.desktopFile !== "" && remorse.desktopFile !== desktopFile) {
+            remorse.removePackageByDesktopFile()
+            remorse.cancel()
+        }
+        remorse.desktopFile = desktopFile
+
+        //: Notification indicating that an application will be removed, %1 will be replaced by application name
+        //% "Removing %1"
+        remorse.execute(qsTrId("lipstick-jolla-home-no-removing").arg(title))
     }
 
-    Binding on opacity {
-        when: folderSwipeActive
-        value: 1.0 - folderSwipeProgress
+    Component {
+        id: remorseComponent
+
+        RemorsePopup {
+            property string desktopFile
+
+            function removePackageByDesktopFile() {
+                if (desktopFile !== "") {
+                    storeClientInterface.call("removePackageByDesktopFile", desktopFile)
+                    desktopFile = ""
+                }
+            }
+
+            z: 100
+            onTriggered: removePackageByDesktopFile()
+
+            DBusInterface {
+                id: storeClientInterface
+                destination: "com.jolla.jollastore"
+                path: "/StoreClient"
+                iface: "com.jolla.jollastore"
+            }
+        }
     }
 
     z: 10
-    opacity: 0.0
+    opacity: 1.0
     Behavior on opacity {
         SmoothedAnimation {
             duration: 400
@@ -44,16 +96,6 @@ Rectangle {
         }
     }
 
-    gradient: Gradient {
-        GradientStop { position: 0.0; color: Theme.rgba("black", 1.0) }
-        GradientStop { position: 1.0; color: Theme.rgba("black", 0.8) }
-    }
-
-    width: Screen.width
-    height: Screen.height
-
-    Component.onCompleted: opacity = 1.0
-
     Connections {
         target: Lipstick.compositor
         onDisplayOff: launcherFolder.close()
@@ -105,27 +147,43 @@ Rectangle {
         Rectangle {
             id: header
             width: parent.width
-            height: launcherGrid.cellHeight - Theme.fontSizeExtraSmall/2
+            height: launcherFolder.cellHeight - Theme.fontSizeExtraSmall/2
             gradient: Gradient {
                 GradientStop { position: 0.0; color: Theme.rgba(Theme.primaryColor, 0.0) }
                 GradientStop { position: 1.0; color: Theme.rgba(Theme.primaryColor, 0.15) }
             }
+            opacity: 1 - footer.opacity
 
             MouseArea {
                 id: icon
-                width: launcherGrid.cellWidth
+                width: launcherFolder.cellWidth
                 height: parent.height
-                LauncherIcon {
-                    y: (launcherGrid.cellHeight - height - Theme.fontSizeExtraSmall)/2
-                    icon: model.iconId
+                Loader {
+                    y: (launcherFolder.cellHeight - height - Theme.fontSizeExtraSmall)/2
                     anchors.horizontalCenter: parent.horizontalCenter
-                    pressed: icon.pressed && icon.containsMouse
-                    Text {
-                        font.pixelSize: Theme.fontSizeExtraLarge
-                        font.family: Theme.fontFamilyHeading
-                        color: Theme.primaryColor
-                        text: model.itemCount
-                        anchors.centerIn: parent
+                    sourceComponent: model.iconId == "icon-launcher-folder-00" ? headerFolderIconComponent : headerLauncherIconComponent
+                    active: true
+                }
+
+                Component {
+                    id: headerLauncherIconComponent
+                    LauncherIcon {
+                        icon: model.iconId
+                        pressed: icon.pressed && icon.containsMouse
+                        Text {
+                            font.pixelSize: Theme.fontSizeExtraLarge
+                            font.family: Theme.fontFamilyHeading
+                            color: Theme.primaryColor
+                            text: model.itemCount
+                            anchors.centerIn: parent
+                        }
+                    }
+                }
+                Component {
+                    id: headerFolderIconComponent
+                    FolderIcon {
+                        icons: iconFolderItems(model)
+                        pressed: icon.pressed && icon.containsMouse
                     }
                 }
                 onClicked: {
@@ -142,7 +200,7 @@ Rectangle {
 
             TextField {
                 id: titleEditor
-                property bool allowFocus: !folderSwipeActive
+                property bool allowFocus: true//!folderSwipeActive
                 anchors {
                     left: icon.right
                     leftMargin: -Theme.paddingLarge
@@ -197,8 +255,8 @@ Rectangle {
             // Use a clipper item to clip slightly outside the GridView area
             anchors.top: header.bottom
             width: parent.width
-            height: launcherGrid.height + Theme.fontSizeExtraSmall
-            clip: true
+            height: launcherGrid.height
+            clip: launcherGrid.reorderItem ? false : true
 
             LauncherGrid {
                 id: launcherGrid
@@ -244,8 +302,7 @@ Rectangle {
                 VerticalScrollDecorator {}
 
                 y: Theme.fontSizeExtraSmall/2
-                width: parent.width
-                height: cellHeight * visibleRowCount
+                height: selectIcon ? Screen.height : (launcherFolder.height - header.height)
                 cacheBuffer: height
                 displayMarginBeginning: Theme.fontSizeExtraSmall/2
                 displayMarginEnd: Theme.fontSizeExtraSmall/2
@@ -262,20 +319,17 @@ Rectangle {
                 if (item) {
                     // The odd launcherGrid.reorderItem.y line below is to force revaluation of this binding
                     launcherGrid.reorderItem.y
-                    var itemY = launcherGrid.mapFromItem(item, 0, 0).y
-                    if (itemY + item.height/2 > launcherGrid.height)
+                    var itemY = header.mapFromItem(item, 0, 0).y
+                    if (itemY < header.height / 2)
                         return true
                 }
                 return false
             }
-            height: launcherGrid.cellHeight - Theme.fontSizeExtraSmall/2
+            height: launcherFolder.cellHeight - Theme.fontSizeExtraSmall/2
             width: parent.width
-            y: parent.height - (launcherGrid.launcherEditMode && launcherGrid.reorderItem ||
-                                model.itemCount > launcherGrid.columns * visibleRowCount ? height : 0)
-            Behavior on y { NumberAnimation { duration: 300; easing.type: Easing.InOutQuad } }
+            y: 0
             opacity: launcherGrid.launcherEditMode && launcherGrid.reorderItem ?
-                         (draggedIntoFooter ? 1.0 : 0.5) :
-                         (model.itemCount > launcherGrid.columns * visibleRowCount ? 0.5 : 0.0)
+                         (draggedIntoFooter ? 1.0 : 0.8) : 0.0
             Behavior on opacity { FadeAnimation {} }
             color: Theme.highlightDimmerColor
             gradient: Gradient {
@@ -285,6 +339,7 @@ Rectangle {
         }
         Label {
             x: Theme.paddingLarge
+            z: launcherGrid.z - 1
             width: parent.width - 2*Theme.paddingLarge
             anchors.verticalCenter: footer.verticalCenter
             color: Theme.highlightColor
@@ -300,32 +355,48 @@ Rectangle {
     Component {
         id: iconSelectorComponent
         Grid {
-            anchors.fill: launcherGrid
+            height: parent.height
+            anchors.horizontalCenter: parent.horizontalCenter
             opacity: selectIcon ? 1.0 : 0.0
             Behavior on opacity { FadeAnimation {} }
             enabled: selectIcon
             Repeater {
-                model: 16
+                model: 17
                 delegate: MouseArea {
                     id: folderIcon
-                    width: launcherGrid.cellWidth
-                    height: launcherGrid.cellHeight
-                    LauncherIcon {
+                    width: launcherFolder.cellWidth
+                    height: launcherFolder.cellHeight
+                    Loader {
                         id: folderLauncherIcon
                         anchors {
                             centerIn: parent
                             verticalCenterOffset: Math.round(-Theme.fontSizeExtraSmall/2)
                         }
-                        icon: "image://theme/icon-launcher-folder-" + (index >= 9 ? (index+1) : "0" + (index+1))
-                        pressed: folderIcon.pressed && folderIcon.containsMouse
-                        opacity: icon.indexOf(launcherFolder.model.iconId) !== -1 ? 0.3 : 1.0
+                        sourceComponent: index == 0  ? folderIconComponent : launcherIconComponent
+                        active: true
+                    }
+                    Component {
+                        id: launcherIconComponent
+                        LauncherIcon {
+                            icon: "image://theme/icon-launcher-folder-" + (index >= 10 ? index : "0" + index)
+                            pressed: folderIcon.pressed && folderIcon.containsMouse
+                            opacity: icon.indexOf(launcherFolder.model.iconId) !== -1 ? 0.3 : 1.0
+                        }
+                    }
+                    Component {
+                        id: folderIconComponent
+                        FolderIcon {
+                            icons: iconFolderItems(launcherFolder.model)
+                            pressed: folderIcon.pressed && folderIcon.containsMouse
+                            opacity: launcherGrid.model.iconId == "icon-launcher-folder-00" ? 0.3 : 1.0
+                        }
                     }
                     Image {
                         anchors.centerIn: folderLauncherIcon
-                        source: folderLauncherIcon.opacity !== 1.0 ? "image://theme/icon-s-installed" : ""
+                        source: folderLauncherIcon.item.opacity !== 1.0 ? "image://theme/icon-s-installed" : ""
                     }
                     onClicked: {
-                        launcherGrid.model.iconId = "icon-launcher-folder-" + (index >= 9 ? (index+1) : "0" + (index+1))
+                        launcherGrid.model.iconId = "icon-launcher-folder-" + (index >= 10 ? index : "0" + index)
                         selectIcon = false
                     }
                 }
diff --git a/usr/share/lipstick-jolla-home-qt5/launcher/LauncherGrid.qml b/usr/share/lipstick-jolla-home-qt5/launcher/LauncherGrid.qml
index 6f35aad..41e0b35 100644
--- a/usr/share/lipstick-jolla-home-qt5/launcher/LauncherGrid.qml
+++ b/usr/share/lipstick-jolla-home-qt5/launcher/LauncherGrid.qml
@@ -11,29 +11,40 @@ import Sailfish.Silica 1.0
 import Sailfish.Silica.private 1.0
 import Sailfish.Lipstick 1.0
 import org.nemomobile.dbus 1.0
+import org.nemomobile.configuration 1.0
 
 SilicaGridView {
     id: gridview
 
+    ConfigurationGroup {
+        id: launcherSettings
+        path: "/apps/lipstick-jolla-home-qt5/settings"
+        property int launcherColumns: 5
+        property bool firstRowLabel: false
+        property bool changeFontSize: true
+        property bool editLabelVisible: true
+    }
+
     property Item reorderItem
     property Item movingItem
-    property int columns: 4
-    property int initialCellWidth: (desktop.width - Theme.paddingLarge * 2) / columns
-    property real firstRowOpacity: Math.min(Math.max((dashboard.contentY - dashboard.lockscreenAndStatusAreaHeight)/cellHeight, 0.0), 1.0)
+    property int columns: launcherSettings.launcherColumns
+    property real scaleFactor: 4 / columns
+    property int initialCellWidth: (Screen.width - Theme.paddingLarge * 2) / columns
+    property real firstRowOpacity: launcherSettings.firstRowLabel ? 1.0 : Math.min(Math.max((dashboard.contentY - dashboard.lockscreenAndStatusAreaHeight)/cellHeight, 0.0), 1.0)
     property bool launcherEditMode: desktop.removeApplicationEnabled
     property var launcherModel: model
     property bool rootFolder
     property int folderIndex: -1
     property QtObject folderComponent
     property Item folderItem
-    property Item openedChildFolder
+    property Page openedChildFolder
     signal itemLaunched
 
     width: cellWidth * columns
     anchors.horizontalCenter: parent.horizontalCenter
     // Increase cellWidth so that icon vertical edges are Theme.paddingLarge away from display edges
-    cellWidth: Math.round(initialCellWidth + (initialCellWidth - Theme.iconSizeLauncher) / (columns - 1))
-    cellHeight: Math.round(Screen.height / 6)
+    cellWidth: Math.round(initialCellWidth + (columns > 1 ? (initialCellWidth - Theme.iconSizeLauncher * scaleFactor) / (columns - 1) : 0))
+    cellHeight: columns > 1 ? Math.round(Screen.height / Math.round(Screen.height / Math.round(Screen.height / 6 * scaleFactor))) : (Screen.height / 2)
 
     function categoryQsTrIds() {
         //% "AudioVideo"
@@ -70,14 +81,14 @@ SilicaGridView {
             openedChildFolder.close()
         }
 
-        if (!folderComponent) {
-            folderComponent = Qt.createComponent("LauncherFolder.qml")
-            if (folderComponent.status == Component.Error) {
-                console.log("Error opening folder", folderComponent.errorString())
-                return
+        openedChildFolder = pageStack.pushAttached(Qt.resolvedUrl("LauncherFolder.qml"), { 'model': folder, 'switcher': switcher, 'dashboard': dashboard, 'desktop': desktop, 'launcher': launcher })
+        openedChildFolder.statusChanged.connect(function() {
+            if (pageStack._currentContainer.attachedContainer && openedChildFolder.status == PageStatus.Inactive && pageStack.depth == 1) {
+                pageStack._currentContainer.attachedContainer.cleanup()
+                pageStack._currentContainer.attachedContainer = null
             }
-        }
-        openedChildFolder = folderComponent.createObject(desktop, { 'model': folder })
+        })
+        pageStack.navigateForward()
     }
 
     function setEditMode(enabled) {
@@ -87,6 +98,14 @@ SilicaGridView {
         desktop.removeApplicationEnabled = enabled
     }
 
+    function iconFolderItems(folder) {
+        var icons = []
+        for (var i = 0; i < folder.itemCount && i < 4; i++) {
+            icons.splice(icons.length, 0, folder.get(i).iconId)
+        }
+        return icons
+    }
+
     Image {
         id: newFolderIcon
         property bool active
@@ -212,7 +231,7 @@ SilicaGridView {
 
             function startReordering() {
                 if (launcherEditMode && !dragged) {
-                    reparent(desktop)
+                    //reparent(desktop)
                     reorderItem = launcherItem
                     drag.target = launcherItem
                     z = 1000
@@ -251,7 +270,7 @@ SilicaGridView {
                     folderItem = null
                     folderIndex = -1
                     newFolderIcon.active = false
-                    reparent(gridview.contentItem)
+                    //reparent(gridview.contentItem)
                     slideMoveAnim.start()
                 }
                 if (movingItem == launcherItem) {
@@ -340,7 +359,7 @@ SilicaGridView {
                     }
                     folderIndex = -1
                     newFolderIcon.active = false
-                } else if (!rootFolder && gridview.mapFromItem(launcherItem, 0, 0).y + launcherItem.height/2 > gridview.height) {
+                } else if (!rootFolder && launcherItem.mapToItem(desktop, 0, 0).y < ((launcherFolder.cellHeight - Theme.fontSizeExtraSmall/2)/2)) {
                     var parentFolderIndex = launcherModel.parentFolder.indexOf(launcherModel)
                     launcherModel.parentFolder.moveToFolder(model.object, launcherModel.parentFolder, parentFolderIndex+1)
                 }
@@ -410,6 +429,7 @@ SilicaGridView {
                     var modifier = launcher.launcherModifierObject
                     var maxContentY = modifier.contentHeight - desktop.height
                     var globalY = desktop.mapFromItem(launcherItem, 0, 0).y
+                    //var globalY = gridview.contentItem.mapFromItem(launcherItem, 0, 0).y
                     if (globalY <= 0 && modifier.contentY > 0) {
                         modifier.scroll(true)
                     } else if (globalY + height >= dashboard.height && modifier.contentY < maxContentY) {
@@ -439,23 +459,45 @@ SilicaGridView {
                 NumberAnimation { target: launcherItem; property: "opacity"; to: 1.0; duration: 75 }
             }
 
-            LauncherIcon {
+            Loader {
                 id: launcherIcon
                 anchors {
                     centerIn: parent
-                    verticalCenterOffset: rootFolder && index <= 3  ? 0 : Math.round(-launcherText.height/2)
+                    verticalCenterOffset: rootFolder && index < gridview.columns  ? 0 : Math.round(-launcherText.height/2)
                 }
-                icon: model.object.iconId
-                pressed: down
-                opacity: isUpdating && folderItemCount == 0 ? 0.2 : 1.0
-                Text {
-                    font.pixelSize: Theme.fontSizeExtraLarge
-                    font.family: Theme.fontFamilyHeading
-                    text: folderItemCount > 0 ? folderItemCount : ""
-                    color: Theme.primaryColor
-                    anchors.centerIn: parent
-                    visible: !isUpdating || model.object.updatingProgress < 0 || model.object.updatingProgress > 100
-                    opacity: reorderItem && folderItemCount >= 99 ? 0.3 : 1.0
+                sourceComponent: model.object.iconId === "icon-launcher-folder-00" ? folderIconComponent : launcherIconComponent
+                active: true
+            }
+
+            Component {
+                id: launcherIconComponent
+                LauncherIcon {
+                    icon: model.object.iconId
+                    width: Theme.iconSizeLauncher * gridview.scaleFactor
+                    height: Theme.iconSizeLauncher * gridview.scaleFactor
+                    sourceSize.width: Theme.iconSizeLauncher * gridview.scaleFactor
+                    sourceSize.height: Theme.iconSizeLauncher * gridview.scaleFactor
+                    pressed: down
+                    opacity: isUpdating && folderItemCount == 0 ? 0.2 : 1.0
+                    Text {
+                        font.pixelSize: Theme.fontSizeExtraLarge
+                        font.family: Theme.fontFamilyHeading
+                        text: folderItemCount > 0 ? folderItemCount : ""
+                        color: Theme.primaryColor
+                        anchors.centerIn: parent
+                        visible: !isUpdating || model.object.updatingProgress < 0 || model.object.updatingProgress > 100
+                        opacity: reorderItem && folderItemCount >= 99 ? 0.3 : 1.0
+                    }
+                }
+            }
+
+            Component {
+                id: folderIconComponent
+                FolderIcon {
+                    width: Theme.iconSizeLauncher * gridview.scaleFactor
+                    height: Theme.iconSizeLauncher * gridview.scaleFactor
+                    icons: iconFolderItems(model.object)
+                    pressed: down
                 }
             }
 
@@ -476,9 +518,9 @@ SilicaGridView {
                 elide: Text.ElideRight
 
                 color: down ? Theme.highlightColor : Theme.primaryColor
-                font.pixelSize: Theme.fontSizeTiny
+                font.pixelSize: launcherSettings.changeFontSize ? (Theme.fontSizeTiny * gridview.scaleFactor) : Theme.fontSizeTiny
                 text: object.title
-                visible: !launcherEditMode || itemType === LauncherModel.Folder
+                visible: !launcherEditMode || itemType === LauncherModel.Folder || launcherSettings.editLabelVisible
             }
 
             Component {
@@ -505,7 +547,7 @@ SilicaGridView {
                     enabled: launcherEditMode
                     opacity: enabled ? 1.0 : 0.0
                     visible: launcherEditMode && itemType == LauncherModel.Application && appControl.isUninstallable(object.filePath) && !object.isUpdating
-                    onClicked: launcher.removeApplication(object.filePath, object.title)
+                    onClicked: removeApplication(object.filePath, object.title)
                 }
             }
         }
