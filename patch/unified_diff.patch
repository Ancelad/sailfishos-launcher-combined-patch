diff --git a/launcher/Launcher.qml b/launcher/Launcher.qml
index 2355f00..0cdf0de 100644
--- a/usr/share/lipstick-jolla-home-qt5/launcher/Launcher.qml
+++ b/usr/share/lipstick-jolla-home-qt5/launcher/Launcher.qml
@@ -10,16 +10,25 @@ import org.nemomobile.lipstick 0.1
 import Sailfish.Silica 1.0
 import Sailfish.Silica.private 1.0 as SilicaPrivate
 import Sailfish.Lipstick 1.0
-import org.nemomobile.dbus 1.0
+import org.nemomobile.configuration 1.0
 
 SilicaListView {
     id: launcherPager
 
+    ConfigurationGroup {
+        id: launcherSettings
+        path: "/apps/lipstick-jolla-home-qt5/launcher"
+        property bool freeScroll: false
+    }
+
     property bool launcherActive: Lipstick.compositor.launcherLayer.active
     onLauncherActiveChanged: if (!launcherActive) { resetPosition(400) }
 
     property bool editMode: launcher.launcherEditMode
     onEditModeChanged: {
+        if (launcherSettings.freeScroll) {
+            return
+        }
         if (editMode) {
             snapMode = ListView.NoSnap
             highlightRangeMode = ListView.NoHighlightRange
@@ -29,13 +38,15 @@ SilicaListView {
         }
     }
 
+    VerticalScrollDecorator {}
+
     model: ListModel {}
     delegate: Item {
         width: launcherPager.width
-        height: launcherPager.height
+        height: launcherSettings.freeScroll ? launcher.cellHeight : launcherPager.height
     }
-    snapMode: ListView.SnapOneItem
-    highlightRangeMode: ListView.StrictlyEnforceRange
+    snapMode: launcherSettings.freeScroll ? ListView.NoSnap : ListView.SnapOneItem
+    highlightRangeMode: launcherSettings.freeScroll ? ListView.NoHighlightRange : ListView.StrictlyEnforceRange
     cacheBuffer: height*model.count
     maximumFlickVelocity: 4000*Theme.pixelRatio
     highlightMoveDuration: 300
@@ -119,8 +130,6 @@ SilicaListView {
 
         LauncherGrid {
             id: launcher
-            property Item remorse
-            property bool removeApplicationEnabled
 
             launcherEditMode: removeApplicationEnabled && !openedChildFolder
 
@@ -167,7 +176,7 @@ SilicaListView {
             function manageDummyPages() {
                 if (launcherPager.height > 0) {
                     // Create dummy pages to allow paging
-                    var pageCount = Math.ceil(contentHeight/launcherPager.height)
+                    var pageCount = launcherSettings.freeScroll ? Math.ceil(count / columns) : Math.ceil(contentHeight/launcherPager.height)
                     while (launcherPager.model.count < pageCount) {
                         launcherPager.model.append({ "name": "dummy" })
                     }
@@ -181,46 +190,6 @@ SilicaListView {
             SilicaPrivate.VisibilityCull {
                 target: launcher.contentItem
             }
-
-            function removeApplication(desktopFile, title) {
-                if (!remorse) {
-                    remorse = remorseComponent.createObject(launcherPager)
-                } else if (remorse.desktopFile !== "" && remorse.desktopFile !== desktopFile) {
-                    remorse.removePackageByDesktopFile()
-                    remorse.cancel()
-                }
-                remorse.desktopFile = desktopFile
-
-                //: Notification indicating that an application will be removed, %1 will be replaced by application name
-                //% "Removing %1"
-                remorse.execute(qsTrId("lipstick-jolla-home-no-removing").arg(title))
-            }
-
-            Component {
-                id: remorseComponent
-
-                RemorsePopup {
-                    property string desktopFile
-
-                    function removePackageByDesktopFile() {
-                        if (desktopFile !== "") {
-                            storeClientInterface.call("removePackageByDesktopFile", desktopFile)
-                            desktopFile = ""
-                        }
-                    }
-
-                    z: 100
-                    onTriggered: removePackageByDesktopFile()
-                    onCanceled: desktopFile = ""
-
-                    DBusInterface {
-                        id: storeClientInterface
-                        destination: "com.jolla.jollastore"
-                        path: "/StoreClient"
-                        iface: "com.jolla.jollastore"
-                    }
-                }
-            }
         }
     }
 }
diff --git a/launcher/LauncherFolder.qml b/launcher/LauncherFolder.qml
index 7d3ec17..87bb31b 100644
--- a/usr/share/lipstick-jolla-home-qt5/launcher/LauncherFolder.qml
+++ b/usr/share/lipstick-jolla-home-qt5/launcher/LauncherFolder.qml
@@ -12,8 +12,11 @@ import Sailfish.Silica.private 1.0
 import Sailfish.Lipstick 1.0
 import com.jolla.lipstick 0.1
 
-Rectangle {
+Page {
     id: launcherFolder
+    _clickablePageIndicators: false
+    allowedOrientations: Orientation.All
+    property var launcherPager
     property alias model: launcherGrid.model
     property bool selectIcon
     property Item iconSelector
@@ -26,25 +29,15 @@ Rectangle {
 
     function close() {
         launcherGrid.setEditMode(false)
-        opacity = 0.0
-        enabled = false
+        pageStack.pop(0, PageStackAction.Immediate)
         destroy(450)
     }
 
     z: 10
-    opacity: 0.0
-    Behavior on opacity { SmoothedAnimation { duration: 400; velocity: 1000 / duration } }
-
-    gradient: Gradient {
-        GradientStop { position: 0.0; color: Theme.rgba("black", 1.0) }
-        GradientStop { position: 1.0; color: Theme.rgba("black", 0.8) }
-    }
 
     width: launcherPager.width
     height: launcherPager.height
 
-    Component.onCompleted: opacity = 1.0
-
     Connections {
         target: Lipstick.compositor
         onDisplayOff: launcherFolder.close()
@@ -99,11 +92,12 @@ Rectangle {
         Rectangle {
             id: header
             width: parent.width
-            height: launcherGrid.cellHeight - Theme.fontSizeExtraSmall/2
+            height: launcherIcon.height + Theme.paddingLarge
             gradient: Gradient {
                 GradientStop { position: 0.0; color: Theme.rgba(Theme.primaryColor, 0.0) }
                 GradientStop { position: 1.0; color: Theme.rgba(Theme.primaryColor, 0.15) }
             }
+            opacity: 1 - footer.opacity
 
             Image {
                 anchors.horizontalCenter: parent.horizontalCenter
@@ -111,21 +105,22 @@ Rectangle {
             }
 
             MouseArea {
-                id: icon
-                width: launcherGrid.cellWidth
+                id: iconHeader
+                width: height
                 height: parent.height
                 x: launcherGrid.x // launcherGrid is centered in it's parent
-                LauncherIcon {
-                    y: (launcherGrid.cellHeight - height - Theme.fontSizeExtraSmall)/2
-                    icon: model.iconId
-                    anchors.horizontalCenter: parent.horizontalCenter
-                    pressed: icon.pressed && icon.containsMouse
+                FolderIconLoader {
+                    id: launcherIcon
+                    folder: model
+                    anchors.centerIn: parent
+                    pressed: iconHeader.pressed && iconHeader.containsMouse
                     Text {
                         font.pixelSize: Theme.fontSizeExtraLarge
                         font.family: Theme.fontFamilyHeading
                         color: Theme.primaryColor
                         text: model.itemCount
                         anchors.centerIn: parent
+                        visible: launcherIcon.index < 16
                     }
                 }
                 onClicked: {
@@ -143,7 +138,7 @@ Rectangle {
             TextField {
                 id: titleEditor
                 anchors {
-                    left: icon.right
+                    left: iconHeader.right
                     leftMargin: -Theme.paddingLarge
                     right: parent.right
                     verticalCenter: parent.verticalCenter
@@ -177,8 +172,8 @@ Rectangle {
                 anchors {
                     right: titleEditor.right
                     rightMargin: Theme.horizontalPageMargin
-                    top: titleEditor.bottom
-                    topMargin: -Theme.paddingMedium
+                    bottom: parent.bottom
+                    bottomMargin: Theme.paddingMedium
                 }
                 font.pixelSize: Theme.fontSizeSmall
                 color: Theme.highlightColor
@@ -195,8 +190,8 @@ Rectangle {
             // Use a clipper item to clip slightly outside the GridView area
             anchors.top: header.bottom
             width: parent.width
-            height: launcherGrid.height + Theme.fontSizeExtraSmall
-            clip: true
+            height: launcherGrid.height
+            clip: launcherGrid.reorderItem ? false : true
 
             LauncherGrid {
                 id: launcherGrid
@@ -243,7 +238,7 @@ Rectangle {
                 VerticalScrollDecorator {}
 
                 y: Theme.fontSizeExtraSmall/2
-                height: cellHeight * visibleRowCount
+                height: selectIcon ? launcherFolder.height : (launcherFolder.height - header.height)
                 cacheBuffer: height
                 displayMarginBeginning: Theme.fontSizeExtraSmall/2
                 displayMarginEnd: Theme.fontSizeExtraSmall/2
@@ -260,20 +255,17 @@ Rectangle {
                 if (item) {
                     // The odd launcherGrid.reorderItem.y line below is to force revaluation of this binding
                     launcherGrid.reorderItem.y
-                    var itemY = launcherGrid.mapFromItem(item, 0, 0).y
-                    if (itemY + item.height/2 > launcherGrid.height)
+                    var itemY = header.mapFromItem(item, 0, 0).y
+                    if (itemY < header.height / 2)
                         return true
                 }
                 return false
             }
             height: launcherGrid.cellHeight - Theme.fontSizeExtraSmall/2
             width: parent.width
-            y: parent.height - (launcherGrid.launcherEditMode && launcherGrid.reorderItem ||
-                                model.itemCount > launcherGrid.columns * visibleRowCount ? height : 0)
-            Behavior on y { NumberAnimation { duration: 300; easing.type: Easing.InOutQuad } }
+            y: 0
             opacity: launcherGrid.launcherEditMode && launcherGrid.reorderItem ?
-                         (draggedIntoFooter ? 1.0 : 0.5) :
-                         (model.itemCount > launcherGrid.columns * visibleRowCount ? 0.5 : 0.0)
+                         (draggedIntoFooter ? 1.0 : 0.8) : 0.0
             Behavior on opacity { FadeAnimation {} }
             color: Theme.highlightDimmerColor
             gradient: Gradient {
@@ -297,37 +289,42 @@ Rectangle {
 
     Component {
         id: iconSelectorComponent
-        Grid {
-            anchors.centerIn: launcherGrid
+        SilicaGridView {
+            height: parent.height
+            width: launcherGrid.width
+            anchors.horizontalCenter: parent.horizontalCenter
+            cellWidth: launcherGrid.cellWidth
+            cellHeight: launcherGrid.cellHeight
             opacity: selectIcon ? 1.0 : 0.0
             Behavior on opacity { FadeAnimation {} }
             enabled: selectIcon
-            Repeater {
-                model: 16
-                delegate: MouseArea {
-                    id: folderIcon
-                    width: launcherGrid.cellWidth
-                    height: launcherGrid.cellHeight
-                    LauncherIcon {
-                        id: folderLauncherIcon
-                        anchors {
-                            centerIn: parent
-                            verticalCenterOffset: Math.round(-Theme.fontSizeExtraSmall/2)
-                        }
-                        icon: "image://theme/icon-launcher-folder-" + (index >= 9 ? (index+1) : "0" + (index+1))
-                        pressed: folderIcon.pressed && folderIcon.containsMouse
-                        opacity: icon.indexOf(launcherFolder.model.iconId) !== -1 ? 0.3 : 1.0
-                    }
-                    Image {
-                        anchors.centerIn: folderLauncherIcon
-                        source: folderLauncherIcon.opacity !== 1.0 ? "image://theme/icon-s-installed" : ""
-                    }
-                    onClicked: {
-                        launcherGrid.model.iconId = "icon-launcher-folder-" + (index >= 9 ? (index+1) : "0" + (index+1))
-                        selectIcon = false
+            model: 20
+            delegate: MouseArea {
+                id: folderIcon
+                width: cellWidth
+                height: cellHeight
+                FolderIconLoader {
+                    id: folderLauncherIcon
+                    anchors {
+                        centerIn: parent
+                        verticalCenterOffset: Math.round(-Theme.fontSizeExtraSmall/2)
                     }
+                    folder: launcherFolder.model
+                    index: model.index
+                    icon: "image://theme/icon-launcher-folder-" + (index >= 9 ? (index+1) : "0" + (index+1))
+                    pressed: folderIcon.pressed && folderIcon.containsMouse
+                    opacity: icon.indexOf(launcherFolder.model.iconId) !== -1 ? 0.3 : 1.0
+                }
+                Image {
+                    anchors.centerIn: folderLauncherIcon
+                    source: folderLauncherIcon.opacity !== 1.0 ? "image://theme/icon-s-installed" : ""
+                }
+                onClicked: {
+                    launcherGrid.model.iconId = "icon-launcher-folder-" + (index >= 9 ? (index+1) : "0" + (index+1))
+                    selectIcon = false
                 }
             }
+            footer: Item { width: 1; height: Theme.paddingLarge }
         }
     }
 }
diff --git a/launcher/LauncherGrid.qml b/launcher/LauncherGrid.qml
index adb86f8..afa3555 100644
--- a/usr/share/lipstick-jolla-home-qt5/launcher/LauncherGrid.qml
+++ b/usr/share/lipstick-jolla-home-qt5/launcher/LauncherGrid.qml
@@ -12,23 +12,38 @@ import Sailfish.Silica 1.0
 import Sailfish.Silica.private 1.0
 import Sailfish.Lipstick 1.0
 import "../main"
+import org.nemomobile.configuration 1.0
 
 SilicaGridView {
     id: gridview
 
+    ConfigurationGroup {
+        id: launcherGridSettings
+        path: "/apps/lipstick-jolla-home-qt5/launcherGrid"
+        property int columns: 4 // Math.floor(launcherPager.width / minimumCellWidth)
+        property int rows: 6 // Math.floor(launcherPager.height / minimumCellHeight)
+        property bool editLabelVisible: true
+        property bool zoomIcons: false
+        property bool zoomFonts: false
+        property real zoomValue: 1.0
+    }
+
+    property int orientation: __silica_applicationwindow_instance._pageOrientation
+    property bool isPortrait: (orientation === Orientation.Portrait || orientation === Orientation.PortraitInverted || orientation === Orientation.None)
+
     // The multipliers below for Large screens are magic. They look good on Jolla tablet.
     property real minimumCellWidth: Screen.sizeCategory >= Screen.Large ? Theme.itemSizeExtraLarge * 1.6 : Theme.itemSizeExtraLarge
     // phone reference row height: 960 / 6
     property real minimumCellHeight: Screen.sizeCategory >= Screen.Large ? Theme.itemSizeExtraLarge * 1.6 : Theme.pixelRatio * 160
-    property int rows: Math.floor(launcherPager.height / minimumCellHeight)
-    property int columns: Math.floor(launcherPager.width / minimumCellWidth)
+    property int rows: isPortrait ? launcherGridSettings.rows : launcherGridSettings.columns
+    property int columns: isPortrait ? launcherGridSettings.columns : launcherGridSettings.rows
     property int horizontalMargin: Screen.sizeCategory >= Screen.Large ? 6 * Theme.paddingLarge : Theme.paddingLarge
     property int initialCellWidth: (launcherPager.width - 2*horizontalMargin) / columns
     property bool launcherEditMode: removeApplicationEnabled
     property var launcherModel: model
     property bool rootFolder
     property QtObject folderComponent
-    property Item openedChildFolder
+    property Page openedChildFolder
     property alias reorderItem: gridManager.reorderItem
     property alias gridManager: gridManager
     readonly property bool largeScreen: Screen.sizeCategory >= Screen.Large
@@ -75,14 +90,13 @@ SilicaGridView {
             openedChildFolder.close()
         }
 
-        if (!folderComponent) {
-            folderComponent = Qt.createComponent("LauncherFolder.qml")
-            if (folderComponent.status == Component.Error) {
-                console.log("Error opening folder", folderComponent.errorString())
-                return
-            }
-        }
-        openedChildFolder = folderComponent.createObject(launcherPager, { 'model': folder })
+        openedChildFolder = pageStack.push(Qt.resolvedUrl("LauncherFolder.qml"), { 'model': folder, 'launcherPager': launcherPager })
+        openedChildFolder.statusChanged.connect(function() {
+            if (pageStack._currentContainer.attachedContainer && openedChildFolder.status == PageStatus.Inactive && pageStack.depth == 1) {
+                pageStack._currentContainer.attachedContainer.cleanup()
+                pageStack._currentContainer.attachedContainer = null
+             }
+        })
     }
 
     function setEditMode(enabled) {
@@ -258,22 +272,24 @@ SilicaGridView {
             }
         }
 
-        LauncherIcon {
+        FolderIconLoader {
             id: launcherIcon
             anchors {
                 centerIn: parent
                 verticalCenterOffset: Math.floor(-launcherText.height/2)
             }
             icon: model.object.iconId
+            folder: model.object
             pressed: down
             opacity: isUpdating && folderItemCount == 0 ? 0.2 : 1.0
+            size: Theme.iconSizeLauncher * (launcherGridSettings.zoomIcons ? launcherGridSettings.zoomValue : 1.0)
             Text {
-                font.pixelSize: Theme.fontSizeExtraLarge
+                font.pixelSize: Theme.fontSizeExtraLarge * (launcherGridSettings.zoomIcons ? launcherGridSettings.zoomValue : 1.0)
                 font.family: Theme.fontFamilyHeading
                 text: folderItemCount > 0 ? folderItemCount : ""
                 color: Theme.primaryColor
                 anchors.centerIn: parent
-                visible: !isUpdating || model.object.updatingProgress < 0 || model.object.updatingProgress > 100
+                visible: launcherIcon.index < 16 && (!isUpdating || model.object.updatingProgress < 0 || model.object.updatingProgress > 100)
                 opacity: reorderItem && folderItemCount >= 99 ? 0.3 : 1.0
             }
         }
@@ -291,12 +307,12 @@ SilicaGridView {
             }
             horizontalAlignment: Text.AlignHCenter
             elide: Text.ElideRight
-
+            smooth: true
             color: down ? Theme.highlightColor : Theme.primaryColor
-            font.pixelSize: Theme.fontSizeTiny
+            font.pixelSize: Theme.fontSizeTiny * (launcherGridSettings.zoomFonts ? launcherGridSettings.zoomValue : 1.0)
             text: object.title
             textFormat: Text.PlainText
-            visible: !launcherEditMode || isFolder
+            visible: !launcherEditMode || isFolder || launcherGridSettings.editLabelVisible
         }
 
         Component {
@@ -323,7 +339,7 @@ SilicaGridView {
                 enabled: launcherEditMode
                 opacity: enabled ? 1.0 : 0.0
                 visible: launcherEditMode && !isFolder && appControl.isUninstallable(object.filePath) && !object.isUpdating
-                onClicked: launcher.removeApplication(object.filePath, object.title)
+                onClicked: removeApplication(object.filePath, object.title)
             }
         }
     }
diff --git a/launcher/LauncherView.qml b/launcher/LauncherView.qml
index 80ab474..dca1dd8 100644
--- a/usr/share/lipstick-jolla-home-qt5/launcher/LauncherView.qml
+++ b/usr/share/lipstick-jolla-home-qt5/launcher/LauncherView.qml
@@ -3,6 +3,9 @@ import QtQuick 2.0
 import org.nemomobile.lipstick 0.1
 import Sailfish.Silica 1.0
 import com.jolla.lipstick 0.1
+import org.nemomobile.dbus 1.0
+import org.nemomobile.configuration 1.0
+import Sailfish.Silica.private 1.0
 
 ApplicationWindow {
     id: launcherWindow
@@ -11,12 +14,86 @@ ApplicationWindow {
 
 //    enabled: !Lipstick.compositor.deviceIsLocked
 
-    allowedOrientations: Lipstick.compositor.topmostWindowOrientation
+    allowedOrientations: Orientation.All
 
-    children: Rectangle {
+    ConfigurationGroup {
+        id: launcherViewSettings
+        path: "/apps/lipstick-jolla-home-qt5/launcherView"
+        property bool glassBackground: false
+        property bool themedBackgroundColor: false
+        property real backgroundOpacity: 1.0
+    }
+
+    children: Loader {
         z: -1
-        color: "black"
-        anchors.fill: parent
+        opacity: launcherViewSettings.backgroundOpacity
+        sourceComponent: launcherViewSettings.glassBackground ? blurBackground : colorRectangle
+    }
+
+    Component {
+        id: colorRectangle
+        Rectangle {
+            anchors.fill: parent
+            color: launcherViewSettings.themedBackgroundColor ? Theme.highlightDimmerColor : "black"
+        }
+    }
+
+    Component {
+        id: blurBackground
+        Wallpaper {
+            id: wallpaper
+            anchors.centerIn: parent
+            width: Screen.width
+            height: Screen.height
+            visible: true
+            source: Theme.backgroundImage
+            windowRotation: 0
+            verticalOffset: 0
+            horizontalOffset: 0
+        }
+    }
+
+    property Item remorse
+    property bool removeApplicationEnabled
+
+    function removeApplication(desktopFile, title) {
+        if (!remorse) {
+            remorse = remorseComponent.createObject(launcherWindow)
+        } else if (remorse.desktopFile !== "" && remorse.desktopFile !== desktopFile) {
+            remorse.removePackageByDesktopFile()
+            remorse.cancel()
+        }
+        remorse.desktopFile = desktopFile
+
+        //: Notification indicating that an application will be removed, %1 will be replaced by application name
+        //% "Removing %1"
+        remorse.execute(qsTrId("lipstick-jolla-home-no-removing").arg(title))
+    }
+
+    Component {
+        id: remorseComponent
+
+        RemorsePopup {
+            property string desktopFile
+
+            function removePackageByDesktopFile() {
+                if (desktopFile !== "") {
+                    storeClientInterface.call("removePackageByDesktopFile", desktopFile)
+                    desktopFile = ""
+                }
+            }
+
+            z: 100
+            onTriggered: removePackageByDesktopFile()
+            onCanceled: desktopFile = ""
+
+            DBusInterface {
+                id: storeClientInterface
+                destination: "com.jolla.jollastore"
+                path: "/StoreClient"
+                iface: "com.jolla.jollastore"
+            }
+        }
     }
 
     initialPage: Component { Page {
diff --git a/layers/LauncherLayer.qml b/layers/LauncherLayer.qml
index 009fdc9..73735e2 100644
--- a/usr/share/lipstick-jolla-home-qt5/layers/LauncherLayer.qml
+++ b/usr/share/lipstick-jolla-home-qt5/layers/LauncherLayer.qml
@@ -9,6 +9,8 @@ EdgeLayer {
     // Show launcher above alarms
     property bool allowed
 
+    opaque: false
+
     objectName: "launcherLayer"
 
     peekFilter.enabled: Lipstick.compositor.systemInitComplete
